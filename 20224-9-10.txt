1.1 四则运算(project)
第1关 整数四则运算
"""
试编程实现分两行输入两个非零整数，并在4 行中按顺序输出两个数的加、减、乘、除的计算结果。
要求输出与如下示例格式相同，符号前后各有一个空格。
"""

#输入整数变量a和b，定义输入函数
##############Begin##################
a = int(input(""))
b = int(input(""))
##############End####################

#a和b之间进行四则运算并输出
##############Begin##################
print(f'{a} + {b} = {a + b}')
print(f'{a} - {b} = {a - b}')
print(f'{a} * {b} = {a * b}')
print(f'{a} / {b} = {a / b}')


##############End####################
第2关 浮点类型四则运算
'''
试编程实现分两行输入两个非零浮点数，并在4 行中按顺序输出两个数的加、减、乘、除的计算式和计算结果。计算结果str.format()方法保留小数点后3位数字。要求输出与如下示例格式相同，符号前后各有一个空格。
'''

#输入浮点型变量a和b，定义输入函数
#############Begin##############
a = float(input(""))
b = float(input(""))
#############End################

#a和b之间进行四则运算并输出
#############Begin################
print(f'{a} + {b} = {a + b:.3f}')
print(f'{a} - {b} = {a - b:.3f}')
print(f'{a} * {b} = {a * b:.3f}')
print(f'{a} / {b} = {a / b:.3f}')
#############End################
第3关 用户输入数值和符号
# 以下三行代码不要修改
a = int(input('请输入一个整数：'))    
b = int(input('请再输入一个整数：')) 
sign = input('请输入运算符号')
# 补充你的代码
# eval()函数把字符串f"{a}{sign}{b}"转为计算表达式
# 字符串里包含引号时，内部引号与边界应用不同的引号
expression = f"{a}{sign}{b}" 
result = eval(expression)  
print(f"{a}{sign}{b}={result}") 
第4关 随机出题的四则运算
import random
random.seed(0)  # 随机数种子，用于评测，请不要修改


# 在注释语句后面补充合适的代码，使程序能完成预期的功能
def calculator(n, maximum):
    """随机产生n道正整数四则运算的题目,用户输入计算结果，
    判断输入正确与否,并统计正确率。题目保证减法不出现负数."""
    correct = 0
    for i in range(n):  # 循环n次，每次产生一个新问题
        b = random.randint(0, maximum)  # 随机产生一个maximum以内整数
        a = random.randint(b, maximum)  # 随机产生一个b到maximum以内整数，避免减法出现负数
        sign = random.choice('+-*/')    # 随机获取一个运算符号
        # 先输出一个格式化的计算表达式并保持光标不换到下一行，类似5+10=

        # 接受用户输入的一个浮点数，并转换为浮点类型

        # 如果计算结果正确，输出'恭喜你，回答正确'并统计答对的次数，注意满足条件时执行的语句要缩进
        print(f"{a}{sign}{b}=", end='')  
          
        user_input = float(input())  
          
        if sign == '+':  
            real_result = a + b  
        elif sign == '-':  
            real_result = a - b  
        elif sign == '*':  
            real_result = a * b  
        elif sign == '/':  
            if b == 0:  
                print("错误：除数不能为0。") 
                continue   
            real_result = round(a / b, 2)  
            
        if round(user_input, 2) == real_result:  
            print("恭喜你，回答正确")  
            correct += 1  
        else:  
            print("回答错误，你要加油哦！")  
        
    accuracy = correct / n * 100  



        # 否则输出'回答错误，你要加油哦！'

            
    # 以下语句不要修改
    print(f'答对{correct}题，正确率为{correct / n * 100}% ')


# 以下语句不要修改
if __name__ == '__main__':
    num = int(input('请输入出题数量：'))
    m = int(input('请输入参与计算的最大数字：'))
    calculator(num, m)  # 调用函数完成计算
1.2 欢迎入学(project)
第1关 欢迎入学"""
编写程序，用户入自己的姓名，输出以下界面后，再在下一行输出“欢迎您，***同学！”
|++++++++++++++++++++++|
|                      |
|   Welcome to WHUT    |
|                      |
|++++++++++++++++++++++|
"""

my_name = input()  # 输入学生的姓名                             
########### Begin ############
# 输出以上界面
print('|++++++++++++++++++++++|')  
print('|                      |')  
print('|   Welcome to WHUT    |')  
print('|                      |')
print('|++++++++++++++++++++++|')
print(f'欢迎您，{my_name}同学！')  

########### End ############
1.3 日期格式化输出(project)
第1关 空格分隔格式化输出
# 实验要求
# 在三行中分别输入当前的年、月、日的整数值，按要求完成输出。
# 1 输出年月日，空格分隔，格式：2020 09 16

# 测试数据
# 输入(>>>开头的行表示输入数据)
# >>>2021
# >>>04
# >>>26

# 输出
# 2021 04 26

# 以下为代码区

# =======================================================
year = input()                         # 输入当前年
month = input()                        # 输入当前月
date = input()                         # 输入当前日
# =======================================================
print(f"{year} {month.zfill(2)} {date.zfill(2)}")

# =======================================================
第2关 多对象的分隔符号格式化输出
# 实验要求
# 在三行中分别输入当前的年、月、日的整数值，按要求完成输出。

# 2 输出年-月-日，连字符“-”分隔，格式：2020-09-16
# 3 输出年/月/日，斜线“/”分隔，格式：2020/09/16
# 4 输出月，日，年，逗号“,”分隔，格式：09,16,2020


# 测试数据
# 输入(>>>开头的行表示输入数据)
# >>>2021
# >>>04
# >>>26

# 输出
# 2021-04-26
# 2021/04/26
# 04,26,2021

# 以下为代码区

# =======================================================
year = input()                         # 输入当前年
month = input()                        # 输入当前月
date = input()                         # 输入当前日
# =======================================================
# 输出年-月-日  
print(f"{year}-{month.zfill(2)}-{date.zfill(2)}")  
  
# 输出年/月/日  
print(f"{year}/{month.zfill(2)}/{date.zfill(2)}")  
  
# 输出月,日,年  
print(f"{month.zfill(2)},{date.zfill(2)},{year}")

# =======================================================
第3关 format方式格式化输出
# 实验要求
# 在三行中分别输入当前的年、月、日的整数值，按要求完成输出。
# 5 用str.format()格式输出，格式：2020 年09 月16 日


# 测试数据
# 输入(>>>开头的行表示输入数据)
# >>>2021
# >>>04
# >>>26

# 输出
# 2021年04月26日
# 以下为代码区

# =======================================================
year = input()                         # 输入当前年
month = input()                        # 输入当前月
date = input()                         # 输入当前日
# =======================================================
print("{}年{:02d}月{:02d}日".format(year, int(month), int(date)))
第4关 字符串拼接方式格式化输出
# 实验要求
# 在三行中分别输入当前的年、月、日的整数值，按要求完成输出。
# 6 用字符串拼接方法输出，格式：2020 年09 月16 日

# 测试数据
# 输入(>>>开头的行表示输入数据)
# >>>2021
# >>>04
# >>>26

# 输出
# 2021年04月26日
# 以下为代码区

# =======================================================
year = input()                         # 输入当前年
month = input()                        # 输入当前月
date = input()                         # 输入当前日
# =======================================================
print(""+year+""+"年"+month+""+"月"+date+"日")

# =======================================================
1.4 输入训练(project)
第1关 输入一个字符串并原样输出
# 补充你的代码
user_input = input()  

print(user_input)
第2关 带提示性文字的输入
# 补充你的代码
user_input = input('请输入一个整数：')  

print(user_input)
第3关 将输入的字符串重复10次成一个字符串输出
# 补充你的代码
user_input = input()  

repeated_input = user_input * 10  

print(repeated_input)
第4关 将输入的两个字符串拼接为一个字符串输出
# 补充你的代码
str1 = input()  
 
str2 = input()  

str3 = input()  

combined_str = str1 + str2 + str3  

print(combined_str)
第5关 将输入的整数字符串转为整数并完成数值运算
# 补充你的代码
num1 = int(input())  
 
num2 = int(input())  

product = num1 * num2  

print(product)
第6关 将输入的数字字符串转为浮点数并完成数值运算
# 补充你的代码
num1 = float(input())  

num2 = float(input())  

product = num1 * num2  

print(product)
第7关 将输入的表达式转为可计算类型并输出结果
# 补充你的代码
user_input = input()  

result = eval(user_input) * 3  

print(result)
1.5 输出训练(project)
第1关 输出一个字符串
# 补充你的代码
user_input = input()  
  
print(user_input)
第2关 输出用空格分隔的多个对象
# 补充你的代码
str1 = input()  

str2 = input()  

str3 = input()  
 
print(str1, str2, str3)
第3关 输出用指定字符分隔的多个对象
# 补充你的代码
str1 = input()  

str2 = input()  

str3 = input()  

separator = input()  

print(str1, str2, str3, sep=separator)
第4关 用str.format()控制输出格式
# 补充你的代码
year = input()  
month = input()  
day = input()  
weather = input()  

print('今天是{}年{}月{}日，天气{}。'.format(year, month, day, weather))
第5关 用f-string控制输出格式
# 补充你的代码
year = input()  
month = input()  
day = input()  
weather = input()  

print(f'今天是{year}年{month}月{day}日，天气{weather}。')
第6关 控制输出字符串占位宽度
# 补充你的代码
align = input()  
width = int(input())  
 
pi_2 = '3.14'  
pi_4 = '3.1415'  
pi_7 = '3.1415926'  

print(f'圆周率值为：{pi_2:{align}{width}}')  
print(f'圆周率值为：{pi_4:{align}{width}}')  
print(f'圆周率值为：{pi_7:{align}{width}}')
# 补充你的代码
align = input()  
width = int(input())  
 
pi_2 = '3.14'  
pi_4 = '3.1415'  
pi_7 = '3.1415926'  

print(f'圆周率值为：{pi_2:{align}{width}}')  
print(f'圆周率值为：{pi_4:{align}{width}}')  
print(f'圆周率值为：{pi_7:{align}{width}}')
第7关 控制输出浮点数精度
# 补充你的代码
pi = 3.14159265358979  

m = int(input())  
 
print(f'圆周率值为：{pi:.{m}f}')
简单的个人信息展示
第1关 简单的个人信息展示
# 请补充你的代码
name = input('请输入您的姓名：')  
age = int(input('请输入您的年龄：' ))   
height =float(input('请输入您的身高（米）：')) 

print(f'姓名：{name}')
print(f'年龄：{age} 岁')
print(f'身高：{height} 米')
模拟游戏对话
第1关 模拟游戏对话
# 请补充你的代码
print(f"")
role_name = input("请输入角色的名字：")  
  
try:  
    role_level = int(input("请输入角色的等级："))  
except ValueError:  
    print("输入错误，等级应为整数。")  
    exit() 

try:  
    gold_coins = int(input("请输入角色拥有的金币数量："))  
except ValueError:  
    print("输入错误，金币数量应为整数。")  
    exit()  

print(f"欢迎, 勇敢的 {role_name}!")  
print(f"你现在的等级是 {role_level} 级。")  
print(f"你拥有 {gold_coins} 个金币。")  
print(f"{role_name}，继续你的冒险吧！")
股票交易收益计算器
第1关 股票交易收益计算器
# 请补充你的代码 
buy_price = float(input("请输入股票的买入价格（每股）："))  

sell_price = float(input("请输入股票的卖出价格（每股）："))  

shares = int(input("请输入持有的股票数量："))  

total_profit = (sell_price - buy_price) * shares  

print(f"总收益为：{total_profit:.2f} 元")
BMI（身体质量指数）计算器
第1关 BMI（身体质量指数）计算器
# 请补充你的代码 
weight = float(input("请输入您的体重（公斤）："))  

height = float(input("请输入您的身高（米）："))  

bmi = weight / (height ** 2)  

print(f"您的BMI值为：{bmi:.2f}")  

if bmi < 18.5:  
    print("体重过轻")  
elif 18.5 <= bmi < 24.9:  
    print("体重正常")  
elif 25 <= bmi < 29.9:  
    print("体重超重")  
else:  
    print("肥胖")
数学运算综合训练
第1关 输出整数
a = 8
b = 9
# 补充你的代码，计算并输出a与b的和
sum_result = a + b  
 
print(sum_result)
第2关 输出两个整数的和
a = int(input())  # 输入一个仅包含整数的字符串，用int()将字符串转为整数类型

b = int(input())  

sum_result = a + b  

print(sum_result)
第3关 在输入函数中加提示性文字
a = int(input('请输入第一个整数：'))  # 输入一个仅包含整数的字符串，用int()将字符串转为整数类型
# 补充你的代码
b = int(input('请输入第二个整数：'))

sum = a + b  
 
print(sum)
第4关 数学运算
a = int(input('请输入第一个整数：'))  # 输入一个仅包含整数的字符串，用int()将字符串转为整数类型  
b = int(input('请输入第二个整数：'))  

sum_result = a + b  
subtraction_result = a - b 
multiplication_result = a * b  
division_result = a / b
floor_division_result = a// b
modulus_result = a % b 
power_result = a ** b

print(f"{sum_result}")  
print(f"{subtraction_result}")  
print(f"{multiplication_result}")  
print(f"{division_result}")  
print(f"{floor_division_result}")  
print(f"{modulus_result}")  
print(f"{power_result}")
第5关 格式化输出运算结果
a = int(input('请输入第一个整数：'))  # 输入一个仅包含整数的字符串，用int()将字符串转为整数类型
# 补充你的代码 
b = int(input('请输入第二个整数：'))  

print(f'{a} + {b} = {a + b}')   
print(f'{a} - {b} = {a - b}')   
print(f'{a} * {b} = {a * b}')  
print(f'{a} / {b} = {a / b}')  
print(f'{a} // {b} = {a // b}')  
print(f'{a} % {b} = {a % b}')   
print(f'{a} ** {b} = {a ** b}')
第6关 输出时保留n位小数
# 请补充代码
a = int(input('请输入第一个整数：'))  
b = int(input('请输入第二个整数：'))  

print(f'{a} + {b} = {a + b}')    
print(f'{a} - {b} = {a - b}')  
print(f'{a} * {b} = {a * b}')  
print(f'{a} / {b} = {a / b:.4f}')
第7关 浮点数运算
# 请补充代码
a = float(input('请输入第一个浮点数：'))  
b = float(input('请输入第二个浮点数：'))  
   
print(f'{a} + {b} = {a + b:.2f}')    
print(f'{a} - {b} = {a - b:.2f}') 
print(f'{a} * {b} = {a * b:.2f}')  
print(f'{a} / {b} = {a / b:.2f}')
第8关 字符串转运算表达式
# 请补充代码 
input_expression = input("")  
  
try:  
    result = eval(input_expression)   
    print(f"{result:.3f}")  
except Exception as e:  
    print(f"计算错误：{e}")
人机交互自学引导
第1关 输出“Hello World!”
# 在下面一行补充代码，输出“Hello World!”  
print("Hello World!")
第2关 输出“李白，你好！”
# 在下面一行补充代码，在两行中依次输出“李白，你好！”和“李白,你好!”
# 使用单引号  
print('李白，你好！')  
  
# 使用双引号  
print("李白,你好!")  
第3关 向任何人问好
# 补充代码，第一行接收一个人名的输入，后面两行中依次输出“xxx 你好！”和“xxx ，你好！”  
user_name = input()  
  
print(user_name, '你好！')  

print(user_name, '，你好！')
第4关 格式化输出
# 补充代码，第一行接收一个人名的输入，后面两行中依次输出“xxx你好！”和“xxx，你好！”
user_name = input()  
   
print('{}你好！'.format(user_name))  
 
print('{}，你好！'.format(user_name))
第5关 输出多对象
# 前两行分别输入人名和用于分隔的符号，第三行输出“xxx分隔符你好！”
user_name = input()  
separator = input()  
  
print(user_name, '你好！', sep=separator)  
第6关 同一行输出
# 在下面空行输入一个符号
separator = input("")  
poets = ['李白', '王维', '王勃', '白居易', '杜甫']  
   
for index, poet in enumerate(poets):  
        print(poet, end=separator)  
人机交互视频同步实训
第1关 新手指引之Hello world!
# 请补充你的代码
print('Hello, World!')
第2关 新手指引之输出多个对象
year = 2023
month = 10
day = 6
# 分别在四行中输出year, month, day的值，分隔符分别用空格“ ”、斜杠“/”、连字符“-”和点“.”
# 在下面补充你的代码
# 使用空格作为分隔符  
print('2023', '10', '6', sep=' ')  
  
# 使用斜杠“/”作为分隔符  
print('2023', '10', '6', sep='/')  
  
# 使用连字符“-”作为分隔符  
print('2023', '10', '6', sep='-')  
  
# 使用点“.”作为分隔符  
print('2023', '10', '6', sep='.')
第3关 新手指引之输出结束符
month = 10
day = 6
# 在一行中输出year, month, day的值，用斜杠分隔：
# 请修改下面语句，通过增加end参数完成任务
print('2023', end='/')  
print('10', end='/')  
print('6')  
第4关 新手指引之用户输入
# 请补充你的代码
year = input('')  
  
# 输出年份信息  
print('今年是:  {} 年'.format(year))
第5关 新手指引之输出格式
# 请补充你的代码 
year = input()  
month = input()  
day = input()  
    
print(f'今天是公历{year}年{month}月{day}日')
Hello, World!
第1关 Hello, World!
# 补充你的代码
print("Hello, World!")
字符串输出
第1关 字符串输出
# 补充你的代码
print("眼过千遍不如手过一遍！")  
print("书看千行不如手敲一行！")
整数 A+B
第1关 整数 A+B
# 补充你的代码
a = int(input())  

b = int(input())  

sum_result = a + b  

print(sum_result)
控制小数输出精度
第1关 控制小数输出精度
# 补充你的代码 
user_input = input()  
  
number = float(user_input)  
  
formatted_output = "{:.3f}".format(number)  

print(formatted_output)
自我介绍
第1关 自我介绍
# 补充你的代码
name = input()  
city = input()  
hobby = input()  
   
print(f'我的名字是{name}，来自{city}，我的爱好是{hobby}！')
计算矩形面积
第1关 计算矩形面积
length_str = input()  
length = eval(length_str)  

width_str = input()  
width = eval(width_str) 

area = length * width 

print(area)
简单数学运算
第1关 简单数学运算
def solve(a,b):
    # 在此处输入你的代码
    print(a + b)  
    print(a - b)  
    print(a * b)

if __name__ == '__main__':
    a = int(input())  # 输入转为整数
    b = int(input())  # 输入转为整数
    solve(a,b)        # 调用你定义的函数进行数学运算
浮点数四则运算与格式化输出
第1关 浮点数四则运算与格式化输出
float_num1 = float(input())  
float_num2 = float(input())  
   
print(f"{float_num1} + {float_num2} = {float_num1 + float_num2:.3f}")  
print(f"{float_num1} - {float_num2} = {float_num1 - float_num2:.3f}")  
print(f"{float_num1} * {float_num2} = {float_num1 * float_num2:.3f}") 
print(f"{float_num1} / {float_num2} = {float_num1 / float_num2:.3f}") 
Python第一章作业（初级）
第1关 浮点数四则运算与格式化输出
float_num1 = float(input())  
float_num2 = float(input())  
   
print(f"{float_num1} + {float_num2} = {float_num1 + float_num2:.3f}")  
print(f"{float_num1} - {float_num2} = {float_num1 - float_num2:.3f}")  
print(f"{float_num1} * {float_num2} = {float_num1 * float_num2:.3f}") 
print(f"{float_num1} / {float_num2} = {float_num1 / float_num2:.3f}") 
第2关 计算矩形面积
length_str = input()  
length = eval(length_str)  

width_str = input()  
width = eval(width_str) 

area = length * width 

print(area)
第3关 简单数学运算
def solve(a,b):  # 这是函数的定义，先不用理解，程序会执行缩进块的代码
    # 在下面输入你的代码，计算a和b的和、差和积并分三行输出
    print(a + b)  
    print(a - b)  
    print(a * b)
    
    

if __name__ == '__main__':
    a = int(input())  # 输入转为整数
    b = int(input())  # 输入转为整数
    solve(a,b)        # 调用定义的函数solve(a,b)，执行函数中的代码
第4关 空格分隔格式化输出
# 实验要求
# 在三行中分别输入当前的年、月、日的整数值，按要求完成输出。
# 1 输出年月日，空格分隔，格式：2020 09 16

# 测试数据
# 输入(>>>开头的行表示输入数据)
# >>>2021
# >>>04
# >>>26

# 输出
# 2021 04 26

# 以下为代码区

# =======================================================
year = input()                         # 输入当前年
month = input()                        # 输入当前月
date = input()                         # 输入当前日
# =======================================================
print(f"{year} {month.zfill(2)} {date.zfill(2)}")

# =======================================================
第5关 多对象的分隔符号格式化输出
# 实验要求
# 在三行中分别输入当前的年、月、日的整数值，按要求完成输出。

# 2 输出年-月-日，连字符“-”分隔，格式：2020-09-16
# 3 输出年/月/日，斜线“/”分隔，格式：2020/09/16
# 4 输出月，日，年，逗号“,”分隔，格式：09,16,2020


# 测试数据
# 输入(>>>开头的行表示输入数据)
# >>>2021
# >>>04
# >>>26

# 输出
# 2021-04-26
# 2021/04/26
# 04,26,2021

# 以下为代码区

# =======================================================
year = input()                         # 输入当前年
month = input()                        # 输入当前月
date = input()                         # 输入当前日
# =======================================================
# 输出年-月-日  
print(f"{year}-{month.zfill(2)}-{date.zfill(2)}")  
  
# 输出年/月/日  
print(f"{year}/{month.zfill(2)}/{date.zfill(2)}")  
  
# 输出月,日,年  
print(f"{month.zfill(2)},{date.zfill(2)},{year}")

# =======================================================
第6关 format方式格式化输出
# 实验要求
# 在三行中分别输入当前的年、月、日的整数值，按要求完成输出。
# 5 用str.format()格式输出，格式：2020 年09 月16 日


# 测试数据
# 输入(>>>开头的行表示输入数据)
# >>>2021
# >>>04
# >>>26

# 输出
# 2021年04月26日
# 以下为代码区

# =======================================================
year = input()                         # 输入当前年
month = input()                        # 输入当前月
date = input()                         # 输入当前日
# =======================================================
print("{}年{:02d}月{:02d}日".format(year, int(month), int(date)))

# =======================================================
第7关 字符串拼接方式格式化输出
# 实验要求
# 在三行中分别输入当前的年、月、日的整数值，按要求完成输出。
# 6 用字符串拼接方法输出，格式：2020 年09 月16 日

# 测试数据
# 输入(>>>开头的行表示输入数据)
# >>>2021
# >>>04
# >>>26

# 输出
# 2021年04月26日
# 以下为代码区

# =======================================================
year = input()                         # 输入当前年
month = input()                        # 输入当前月
date = input()                         # 输入当前日
# =======================================================
print(""+year+""+"年"+month+""+"月"+date+"日")

# =======================================================
第8关 欢迎入学
"""
编写程序，用户入自己的姓名，输出以下界面后，再在下一行输出“欢迎您，***同学！”
|++++++++++++++++++++++|
|                      |
|   Welcome to WHUT    |
|                      |
|++++++++++++++++++++++|
"""

my_name = input()  # 输入学生的姓名                             
########### Begin ############
# 输出以上界面
print('|++++++++++++++++++++++|')  
print('|                      |')  
print('|   Welcome to WHUT    |')  
print('|                      |')
print('|++++++++++++++++++++++|')
print(f'欢迎您，{my_name}同学！')  

# 输出“欢迎您，***同学！”

########### End ############
Python第一章作业（中级）
第1关 浮点数四则运算与格式化输出
float_num1 = float(input())  
float_num2 = float(input())  
   
print(f"{float_num1} + {float_num2} = {float_num1 + float_num2:.3f}")  
print(f"{float_num1} - {float_num2} = {float_num1 - float_num2:.3f}")  
print(f"{float_num1} * {float_num2} = {float_num1 * float_num2:.3f}") 
print(f"{float_num1} / {float_num2} = {float_num1 / float_num2:.3f}") 
第2关 计算矩形面积
length_str = input()  
length = eval(length_str)  

width_str = input()  
width = eval(width_str) 

area = length * width 

print(area)
第3关 简单数学运算
def solve(a,b):
    # 在此处输入你的代码
    print(a + b)  
    print(a - b)  
    print(a * b)

if __name__ == '__main__':
    a = int(input())  # 输入转为整数
    b = int(input())  # 输入转为整数
    solve(a,b)        # 调用你定义的函数进行数学运算
第4关 空格分隔格式化输出
# 实验要求
# 在三行中分别输入当前的年、月、日的整数值，按要求完成输出。
# 1 输出年月日，空格分隔，格式：2020 09 16

# 测试数据
# 输入(>>>开头的行表示输入数据)
# >>>2021
# >>>04
# >>>26

# 输出
# 2021 04 26

# 以下为代码区

# =======================================================
year = input()                         # 输入当前年
month = input()                        # 输入当前月
date = input()                         # 输入当前日
# =======================================================
print(f"{year} {month.zfill(2)} {date.zfill(2)}")

# =======================================================
第5关 多对象的分隔符号格式化输出
# 实验要求
# 在三行中分别输入当前的年、月、日的整数值，按要求完成输出。

# 2 输出年-月-日，连字符“-”分隔，格式：2020-09-16
# 3 输出年/月/日，斜线“/”分隔，格式：2020/09/16
# 4 输出月，日，年，逗号“,”分隔，格式：09,16,2020


# 测试数据
# 输入(>>>开头的行表示输入数据)
# >>>2021
# >>>04
# >>>26

# 输出
# 2021-04-26
# 2021/04/26
# 04,26,2021

# 以下为代码区

# =======================================================
year = input()                         # 输入当前年
month = input()                        # 输入当前月
date = input()                         # 输入当前日
# =======================================================
print(f"{year}-{month.zfill(2)}-{date.zfill(2)}")  
  
# 输出年/月/日  
print(f"{year}/{month.zfill(2)}/{date.zfill(2)}")  
  
# 输出月,日,年  
print(f"{month.zfill(2)},{date.zfill(2)},{year}")

# =======================================================
第6关 format方式格式化输出
# 实验要求
# 在三行中分别输入当前的年、月、日的整数值，按要求完成输出。
# 5 用str.format()格式输出，格式：2020 年09 月16 日


# 测试数据
# 输入(>>>开头的行表示输入数据)
# >>>2021
# >>>04
# >>>26

# 输出
# 2021年04月26日
# 以下为代码区

# =======================================================
year = input()                         # 输入当前年
month = input()                        # 输入当前月
date = input()                         # 输入当前日
# =======================================================
print("{}年{:02d}月{:02d}日".format(year, int(month), int(date)))

# =======================================================
第7关 字符串拼接方式格式化输出
# 实验要求
# 在三行中分别输入当前的年、月、日的整数值，按要求完成输出。
# 6 用字符串拼接方法输出，格式：2020 年09 月16 日

# 测试数据
# 输入(>>>开头的行表示输入数据)
# >>>2021
# >>>04
# >>>26

# 输出
# 2021年04月26日
# 以下为代码区

# =======================================================
year = input()                         # 输入当前年
month = input()                        # 输入当前月
date = input()                         # 输入当前日
# =======================================================
print(""+year+""+"年"+month+""+"月"+date+"日")

# =======================================================
第8关 欢迎入学
"""
编写程序，用户入自己的姓名，输出以下界面后，再在下一行输出“欢迎您，***同学！”
|++++++++++++++++++++++|
|                      |
|   Welcome to WHUT    |
|                      |
|++++++++++++++++++++++|
"""

my_name = input()  # 输入学生的姓名                             
########### Begin ############
# 输出以上界面
print('|++++++++++++++++++++++|')  
print('|                      |')  
print('|   Welcome to WHUT    |')  
print('|                      |')
print('|++++++++++++++++++++++|')
print(f'欢迎您，{my_name}同学！')  

# 输出“欢迎您，***同学！”

########### End ############
第9关 整数四则运算
"""
试编程实现分两行输入两个非零整数，并在4 行中按顺序输出两个数的加、减、乘、除的计算结果。
要求输出与如下示例格式相同，符号前后各有一个空格。
"""

#输入整数变量a和b，定义输入函数
##############Begin##################
a = int(input(""))
b = int(input(""))
##############End####################

#a和b之间进行四则运算并输出
##############Begin##################
print(f'{a} + {b} = {a + b}')
print(f'{a} - {b} = {a - b}')
print(f'{a} * {b} = {a * b}')
print(f'{a} / {b} = {a / b}')


##############End####################
第10关 浮点类型四则运算
'''
试编程实现分两行输入两个非零浮点数，并在4 行中按顺序输出两个数的加、减、乘、除的计算式和计算结果。计算结果str.format()方法保留小数点后3位数字。要求输出与如下示例格式相同，符号前后各有一个空格。
'''

#输入浮点型变量a和b，定义输入函数
#############Begin##############
a = float(input(""))
b = float(input(""))
#############End################

#a和b之间进行四则运算并输出
#############Begin################
print(f'{a} + {b} = {a + b:.3f}')
print(f'{a} - {b} = {a - b:.3f}')
print(f'{a} * {b} = {a * b:.3f}')
print(f'{a} / {b} = {a / b:.3f}')
#############End################
第11关 用户输入数值和符号
a = int(input('请输入一个整数：'))    
b = int(input('请再输入一个整数：')) 
sign = input('请输入运算符号')
# 补充你的代码
# eval()函数把字符串f"{a}{sign}{b}"转为计算表达式
# 字符串里包含引号时，内部引号与边界应用不同的引号
expression = f"{a}{sign}{b}" 
result = eval(expression)  
print(f"{a}{sign}{b}={result}") 
第12关 随机出题的四则运算
import random
random.seed(0)  # 随机数种子，用于评测，请不要修改


# 在注释语句后面补充合适的代码，使程序能完成预期的功能
def calculator(n, maximum):
    """随机产生n道正整数四则运算的题目,用户输入计算结果，
    判断输入正确与否,并统计正确率。题目保证减法不出现负数."""
    correct = 0
    for i in range(n):  # 循环n次，每次产生一个新问题
        b = random.randint(0, maximum)  # 随机产生一个maximum以内整数
        a = random.randint(b, maximum)  # 随机产生一个b到maximum以内整数，避免减法出现负数
        sign = random.choice('+-*/')    # 随机获取一个运算符号
        # 先输出一个格式化的计算表达式并保持光标不换到下一行，类似5+10=

        # 接受用户输入的一个浮点数，并转换为浮点类型

        # 如果计算结果正确，输出'恭喜你，回答正确'并统计答对的次数，注意满足条件时执行的语句要缩进
        print(f"{a}{sign}{b}=", end='')  
          
        user_input = float(input())  
          
        if sign == '+':  
            real_result = a + b  
        elif sign == '-':  
            real_result = a - b  
        elif sign == '*':  
            real_result = a * b  
        elif sign == '/':  
            if b == 0:  
                print("错误：除数不能为0。") 
                continue   
            real_result = round(a / b, 2)  
            
        if round(user_input, 2) == real_result:  
            print("恭喜你，回答正确")  
            correct += 1  
        else:  
            print("回答错误，你要加油哦！")  
        
    accuracy = correct / n * 100  



        # 否则输出'回答错误，你要加油哦！'

            
    # 以下语句不要修改
    print(f'答对{correct}题，正确率为{correct / n * 100}% ')


# 以下语句不要修改
if __name__ == '__main__':
    num = int(input('请输入出题数量：'))
    m = int(input('请输入参与计算的最大数字：'))
    calculator(num, m)  # 调用函数完成计算
Python程序设计实验一（AB）
第1关 欢迎入学
"""
编写程序，用户入自己的姓名，输出以下界面后，再在下一行输出“欢迎您，***同学！”
|++++++++++++++++++++++|
|                      |
|   Welcome to WHUT    |
|                      |
|++++++++++++++++++++++|
"""

my_name = input()  # 输入学生的姓名                             
########### Begin ############
# 输出以上界面
print('|++++++++++++++++++++++|')  
print('|                      |')  
print('|   Welcome to WHUT    |')  
print('|                      |')
print('|++++++++++++++++++++++|')
print(f'欢迎您，{my_name}同学！')  

# 输出“欢迎您，***同学！”

########### End ############
第2关 整数四则运算
"""
试编程实现分两行输入两个非零整数，并在4 行中按顺序输出两个数的加、减、乘、除的计算结果。
要求输出与如下示例格式相同，符号前后各有一个空格。
"""

#输入整数变量a和b，定义输入函数
##############Begin##################
a = int(input(""))
b = int(input(""))
##############End####################

#a和b之间进行四则运算并输出
##############Begin##################
print(f'{a} + {b} = {a + b}')
print(f'{a} - {b} = {a - b}')
print(f'{a} * {b} = {a * b}')
print(f'{a} / {b} = {a / b}')


##############End####################
第3关 学费计算
price=int(input())
print(f'你本学期选修了17个学分。')
print(f'你应缴纳的学费为{price*17}元。')  
第4关 助学贷款
price=int(input('请输入每学分学费金额：'))
money=int(input('请输入你每个月生活费：'))
can=int((price*17+money*5)*0.6)
print(f'本学期你能够贷款{can:.2f}元')
第5关 计算圆的半径
ab=float(input())
cd=float(input())
result=float(((ab/2)*(ab/2)+cd*cd)/(2*cd))
print(f'{result:.2f}')
第6关 计算弓形的面积
import math  

AB = float(input())  
CD = float(input())  
  
AD = AB / 2  
OA = (AD**2 + CD**2) / (2 * CD)  
  
angle_AOB = 2 * math.asin(AD / OA)  
   
sector_area = (angle_AOB / (2 * math.pi)) * math.pi * OA**2  

triangle_area = 0.5 * OA**2 * math.sin(angle_AOB)  

arch_area = sector_area - triangle_area  
 
print(f"{arch_area:.2f}")
第7关 地球数据计算
import math

radius = 6371 * 1000
#计算地球表面积
surface_area = 4*math.pi*radius*radius
print(f'地球表面积为{surface_area:.2f}平方米')

#计算地球体积
volume =(4*math.pi*radius*radius*radius)/3
print(f'地球体积为{volume:.2f}立方米')

#计算地球赤道的周长
circumference = 2*math.pi*radius
print(f'地球赤道周长为{circumference:.2f}米')

#计算绳子与地球之间的空隙大小
new_radius = (circumference+1)/(2*math.pi)-radius
print(f'空隙大小为{new_radius:.2f}米')

#判断老鼠是否可以从空隙中钻过
if new_radius>0.1:
    print('老鼠可以从空隙中钻过')

else:
    print('老鼠无法通过空隙')
第8关 时间计算
# 读取用户输入的小时、分钟和秒  
hours = int(input())  
minutes = int(input())  
seconds = int(input())  
  
# 以标准时间格式输出  
formatted_time = f"{hours:02}:{minutes:02}:{seconds:02}"  
print(formatted_time)  
  
# 计算距离午夜还剩余的秒数  
# 首先将小时、分钟转换为秒，然后计算总秒数  
total_seconds = hours * 3600 + minutes * 60 + seconds  
remaining_seconds = 86400 - total_seconds  

print(f"距离午夜还剩余{remaining_seconds}秒")