def find_max_and_min(arr):  
    if not arr: 
        return None, None  
  
    maxe = arr[0]  
    mine = arr[0]  
  
    for num in arr[1:]: 
        if num > maxe:  
            maxe = num  
        if num < mine:  
            mine = num  
  
    return maxe, mine  
  
arr = [0,…, n-1]  
   
max_value, min_value = find_max_and_min(arr)  
print(f"最大值: {max_value}, 最小值: {min_value}")

最好时间复杂度：当数组已经是有序的（无论是升序还是降序），算法仍然需要遍历数组中的所有元素来确认最大值和最小值，因此时间复杂度为 O(n)；
最坏时间复杂度：数组完全无序，或者最大值和最小值恰好位于数组的两端，算法同样需要遍历数组中的所有元素，时间复杂度也是 O(n)；
平均时间复杂度：与最坏情况相同，因为无论数组如何分布，算法都需要检查每一个元素来确定最大值和最小值，时间复杂度为 O(n)。